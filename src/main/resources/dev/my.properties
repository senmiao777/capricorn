#tomcat启动后的端口号
#server.port=8080
# 数据源基础配置
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://192.168.31.22:3306/mydb?characterEncoding=utf8&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=look

#frank.data.driver-class-name=com.mysql.jdbc.Driver
frank.data.driver-class-name=com.mysql.cj.jdbc.Driver
frank.data.url=jdbc:mysql://192.168.31.22:3306/mydb?useUnicode=true&characterEncoding=UTF8&useSSL=false

frank.data.username=root
frank.data.password=look
frank.data.unique-name=mydbDatasource
frank.data.pool-size=100

hibernate.id.new_generator_mappings = false

## 连接池配置
## 初始化大小，最小，最大
##spring.datasource.initialSize=1
##spring.datasource.minIdle=1
##spring.datasource.maxActive=20
##
### 配置获取连接等待超时的时间
##spring.datasource.maxWait=60000
##
### 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
##spring.datasource.timeBetweenEvictionRunsMillis=60000
##
### 配置一个连接在池中最小生存的时间，单位是毫秒
##spring.datasource.minEvictableIdleTimeMillis=300000
##spring.datasource.validationQuery=SELECT 1 FROM DUAL
##spring.datasource.testWhileIdle=true
##spring.datasource.testOnBorrow=false
##spring.datasource.testOnReturn=false
##
### 打开PSCache，并且指定每个连接上PSCache的大小
##spring.datasource.poolPreparedStatements=false
##spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
##
### 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
##spring.datasource.filters=stat,wall
##
### 通过connectProperties属性来打开mergeSql功能；慢SQL记录
##spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=2000
#
### 是否在控制台显示sql语句
##spring.jpa.show-sql=true
###JPA Configuration:
##spring.jpa.database=MySQL
##spring.jpa.generate-ddl=true
##spring.jpa.hibernate.ddl-auto=create
###spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
##spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
###spring.jpa.database=org.hibernate.dialect.MySQL5InnoDBDialect
###spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MYSQL5Dialect
#
#
#########################################################
####REDIS (RedisProperties) redis基本配置；
#########################################################
## database name
#spring.redis.database=0
## server host1
#spring.redis.host=192.168.31.22
## server password
#spring.redis.password=123456
##connection port
#spring.redis.port=6379
## pool settings ...
#spring.redis.pool.max-idle=8
#spring.redis.pool.min-idle=0
#spring.redis.pool.max-active=8
#spring.redis.pool.max-wait=-1
## name of Redis server
##spring.redis.sentinel.master=
## comma-separated list of host:portpairs
##spring.redis.sentinel.nodes=
#
#
#
## MONGODB (MongoProperties)
##spring.data.mongodb.authentication-database= # Authentication database name.
##spring.data.mongodb.database=frank # Database name.
##spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.
##spring.data.mongodb.grid-fs-database= # GridFS database name.
##spring.data.mongodb.host=192.168.31.22 # Mongo server host.
##spring.data.mongodb.password= # Login password of the mongo server.
##spring.data.mongodb.port=27017 # Mongo server port.
##Enable Mongo repositories.
#spring.data.mongodb.repositories.enabled=true
## Mongo database URI. When set, host and port are ignored.
#spring.data.mongodb.uri=mongodb://192.168.31.22:27017/frank
##spring.data.mongodb.username= # Login user of the mongo server.
#
#
## Neo4j
#
#
#spring.data.neo4j.username=neo4j
#spring.data.neo4j.password=12345
##数据库uri地址
#spring.data.neo4j.uri=http://192.168.31.22:7474
#
#
##thymeleaf start
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.content-type=text/html
##开发时关闭缓存,不然没法看到实时页面
#spring.thymeleaf.cache=false
##thymeleaf end
